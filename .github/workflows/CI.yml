name: CI

on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    env:
      JULIA_CONDAPKG_BACKEND: "Null"
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - '1.9'
          # - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        run: |
          python -m pip install -r requirements/pycall.txt

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Cache Julia dependencies
        uses: julia-actions/cache@v1
        with:
          path: ~/.julia
          key: julia-deps-${{ hashFiles('**/*.toml') }}

      - name: Build Julia package
        uses: julia-actions/julia-buildpkg@v1

      - name: Run Julia tests
        uses: julia-actions/julia-runtest@v1

      - name: Generate and upload code coverage
        uses: julia-actions/julia-processcoverage@v1

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
